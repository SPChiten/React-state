{"version":3,"sources":["App.js","index.js"],"names":["App","content","React","useState","number","setNumber","textValue","setTextValue","formStage","setFormStage","names","setNames","onChange","e","target","value","type","length","onClick","map","name","className","rootElement","document","getElementById","createRoot","render"],"mappings":"uNAGe,SAASA,IACtB,IAKIC,EALJ,EAA4BC,IAAMC,WAAlC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCH,IAAMC,SAAS,IAAjD,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCL,IAAMC,SAAS,GAAjD,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0BP,IAAMC,SAAS,CAAC,SAAU,UAApD,mBAAOO,EAAP,KAAcC,EAAd,KAwCA,OArCkB,IAAdH,IACFP,EACE,qCACE,iDACA,6BAAKG,IACL,uBAAOQ,SAAU,SAACC,GAAD,OAAON,EAAaM,EAAEC,OAAOC,MAA7B,EAAqCC,KAAK,SAC1DV,EACAA,EAAUW,OAAS,IAAM,kDAC1B,wBAAQC,QAAS,kBAAMT,EAAaD,EAAY,EAA/B,EAAjB,sBAKY,IAAdA,IACFP,EACE,qCACE,wCACA,6BAAKG,IACL,wBAAQc,QAAS,kBAAMb,EAAUD,EAAS,EAAzB,EAAjB,eACA,wBAAQc,QAAS,kBAAMT,EAAaD,EAAY,EAA/B,EAAjB,kBACA,wBAAQU,QAAS,kBAAMT,EAAaD,EAAY,EAA/B,EAAjB,sBAKY,IAAdA,IACFP,EACE,qCACGS,EAAMS,KAAI,SAACC,GAAD,OACT,8BAAMA,GADG,IAGX,wBAAQF,QAAS,kBAAMP,EAAS,GAAD,mBAAKD,GAAL,CAAY,SAA1B,EAAjB,sBACA,wBAAQQ,QAAS,kBAAMT,EAAaD,EAAY,EAA/B,EAAjB,sBAKC,qBAAKa,UAAU,MAAf,SAAsBpB,GAC9B,CC3CD,IAAMqB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC1B,EAAD,M","file":"static/js/main.322beb78.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [number, setNumber] = React.useState();\n  const [textValue, setTextValue] = React.useState(\"\");\n  const [formStage, setFormStage] = React.useState(0);\n  const [names, setNames] = React.useState([\"Chiten\", \"Patel\"]);\n\n  let content;\n  if (formStage === 0) {\n    content = (\n      <>\n        <h1>Let's Use State</h1>\n        <h2>{number}</h2>\n        <input onChange={(e) => setTextValue(e.target.value)} type=\"text\" />\n        {textValue}\n        {textValue.length > 10 && <div> Input too long</div>}\n        <button onClick={() => setFormStage(formStage + 1)}>Next</button>\n      </>\n    );\n  }\n\n  if (formStage === 1) {\n    content = (\n      <>\n        <h1>Step 2</h1>\n        <h2>{number}</h2>\n        <button onClick={() => setNumber(number + 1)}>+</button>\n        <button onClick={() => setFormStage(formStage - 1)}>Prev</button>\n        <button onClick={() => setFormStage(formStage + 1)}>Next</button>\n      </>\n    );\n  }\n\n  if (formStage === 2) {\n    content = (\n      <>\n        {names.map((name) => (\n          <div>{name}</div>\n        ))}\n        <button onClick={() => setNames([...names, \"Cten\"])}>Add Name</button>\n        <button onClick={() => setFormStage(formStage - 1)}>Prev</button>\n      </>\n    );\n  }\n\n  return <div className=\"App\">{content}</div>;\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}